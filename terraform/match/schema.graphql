type Log {
  match_id: ID! @aws_api_key @aws_iam
  message: String @aws_api_key @aws_iam
  timestamp: AWSTimestamp @aws_api_key @aws_iam
  level: String @aws_api_key @aws_iam
  expiration: AWSTimestamp @aws_api_key @aws_iam
}

type Query {
  getLogs(match_id: ID!, last_timestamp: AWSTimestamp = 0): [Log]
    @aws_api_key
    @aws_cognito_user_pools
}

type Mutation {
  addLog(
    match_id: ID!
    timestamp: AWSTimestamp!
    message: String!
    level: String!
    expiration: AWSTimestamp!
  ): Log
    @aws_api_key
    @aws_iam
}

type Subscription {
  onNewLog(match_id: ID!): Log
    @aws_subscribe(mutations: ["addLog"])
    @aws_api_key
    @aws_cognito_user_pools
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
