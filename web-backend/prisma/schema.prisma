generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATEBASE_URL_LOCAL")
}

model UserDao {
  id                Int             @id @unique @default(autoincrement())
  email             String          @unique
  permissionLevel   String
  TeamDao           TeamDao?        @relation(fields: [teamId], references: [id])
  teamId            Int?
  invites           TeamInviteDao[]
}

model TeamDao {
  id              Int               @id @unique @default(autoincrement())
  members         UserDao[]
  TeamInviteDao   TeamInviteDao[]
  name            String
  deleted         Boolean           @default(false)
  TeamMatchDao    TeamMatchDao[]
  requestingMatches MatchRequestDao[] @relation("RequestingTeam")
  requestedMatches  MatchRequestDao[] @relation("RequestedTeam")
  githubUsername String         @unique
}

model TeamMatchDao {
  id       Int      @id @unique @default(autoincrement())
  match    MatchDao @relation(fields: [matchId], references: [matchId])
  matchId  Int
  team     TeamDao  @relation(fields: [teamId], references: [id])
  teamId   Int
  bankroll Int
}

model MatchDao {
  matchId         Int               @id @unique @default(autoincrement())
  timestamp       DateTime          @default(now())
  teamMatchDaos   TeamMatchDao[]
  MatchRequestDao MatchRequestDao[]
}

model TeamInviteDao {
  id     Int      @id @unique @default(autoincrement())
  team   TeamDao  @relation(fields: [teamId], references: [id])
  teamId Int
  sendAt DateTime @default(now())
  user   UserDao  @relation(fields: [userId], references: [id])
  userId Int
}

model MatchRequestDao {
  id              Int       @id @unique @default(autoincrement())
  match           MatchDao? @relation(fields: [matchId], references: [matchId])
  matchId         Int?
  requestingTeam  TeamDao   @relation("RequestingTeam", fields: [requestingTeamId], references: [id])
  requestingTeamId Int
  requestedTeam   TeamDao   @relation("RequestedTeam", fields: [requestedTeamId], references: [id])
  requestedTeamId Int
  accepted        Boolean
}